# # This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# # For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions
# name: Node.js CI
# on:
#   push:
#     branches: [master]
#   pull_request:
#     branches: [master]
# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2
#       - uses: actions/setup-node@v1
#       - name: Install Modules
#         run: npm ci
#       - uses: stefanoeb/eslint-action@1.0.2
#         with:
#           files: src/
#       # - name: Run ESLint
#       #   run: eslint . --ext .js, .jsx, .ts, .tsx
#       #before the first 'run' each "run" is a script from your project:
#       - name: Run Unit Tests
#         run: npm test
# Job name
name: Intergration and Unit Tests

# When the to run the greeting
 on:
   push:
     branches: [master]
   pull_request:
     branches: [master]

# Jobs to run for the action (You can have multiple actions in one file)
jobs:
  test:
    # Job display name
    name: Running Jest tests

    # Runs on a Linux based OS
    runs-on: ubuntu-latest

    # Run the job on 2 different versions of Node (12, 14)
    strategy:
      matrix:
        node-version: [12.x, 14.x]

    # Steps involved for this particular task
    steps:
      # Checks out the reporsitoy and enables the use of commands made avaliable in the project ie npm run
      - name: Checkout Git repository
        uses: actions/checkout@v2

      # Setup Nodes on the versions specified in the matrix stratergy
      - name: Setup Node.js version ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      # Cache the node_modules
      - name: Cache node modules
        uses: actions/cache@v2

        # Defining the cache env config ie the key
        env:
          cache-name: cache-node-modules

        # Caching options (https://github.com/actions/cache)
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm

          # Key for caching the files initally
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

          # Restore keys
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      # Installs all the project dependencies e.g. prettier, eslint etc via a custom project script
      - name: Install Node.js dependencies
        run: npm run allDependencies

      # Run the react-testing-library tests
      - name: Run all tests
        run: npm run test
